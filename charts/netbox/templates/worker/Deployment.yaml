{{- if and .Values.worker.enabled (eq .Values.worker.kind "Deployment") }}
apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ template "netbox.worker.fullname" . }}
  namespace: {{ include "common.names.namespace" . | quote }}
  {{- $versionLabel := dict "app.kubernetes.io/version" ( include "netbox.images.version" (dict "imageRoot" .Values.worker.image "global" .Values.global "chart" .Chart) ) }}  
  {{- $labels := include "common.tplvalues.merge" ( dict "values" ( list .Values.commonLabels $versionLabel ) "context" . ) }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" $labels "context" $ ) | nindent 4 }}
    app.kubernetes.io/component: worker
    app.kubernetes.io/part-of: netbox
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.worker.replicaCount }}
  {{- end }}
  {{- $podLabels := include "common.tplvalues.merge" ( dict "values" ( list .Values.worker.podLabels .Values.commonLabels $versionLabel ) "context" . ) }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" ( dict "customLabels" $podLabels "context" $ ) | nindent 6 }}
      app.kubernetes.io/component: worker
      app.kubernetes.io/part-of: netbox
  {{ if .Values.worker.updateStrategy -}}
  strategy:
    {{- toYaml .Values.worker.updateStrategy | nindent 4 }}
  {{ end -}}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/ConfigMap/netbox.yaml") . | sha256sum }}
        {{- if (not .Values.existingSecretName) }}
        checksum/secret: {{ include (print $.Template.BasePath "/Secret/netbox.yaml") . | sha256sum }}
        {{- end }}
        {{- if .Values.worker.podAnnotations }}
        {{- include "common.tplvalues.render" (dict "value" .Values.worker.podAnnotations "context" $) | nindent 8 }}
        {{- end }}
      labels: {{- include "common.labels.standard" ( dict "customLabels" $podLabels "context" $ ) | nindent 8 }}
        app.kubernetes.io/component: worker
        app.kubernetes.io/part-of: netbox
    spec:
      {{- include "netbox.imagePullSecrets" . | nindent 6 }}
      {{- if .Values.worker.hostAliases }}
      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.worker.hostAliases "context" $) | nindent 8 }}
      {{- end }}
      automountServiceAccountToken: {{ .Values.worker.automountServiceAccountToken }}
      {{- if .Values.worker.priorityClassName }}
      priorityClassName: {{ .Values.worker.priorityClassName | quote }}
      {{- end }}
      {{- if .Values.worker.affinity }}
      affinity: {{- include "common.tplvalues.render" (dict "value" .Values.worker.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.worker.podAffinityPreset "component" "worker" "customLabels" $podLabels "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.worker.podAntiAffinityPreset "component" "worker" "customLabels" $podLabels "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.worker.nodeAffinityPreset.type "key" .Values.worker.nodeAffinityPreset.key "values" .Values.worker.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- if .Values.worker.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.worker.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.worker.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.worker.tolerations "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.worker.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.worker.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ template "netbox.serviceAccountName" . }}
      terminationGracePeriodSeconds: {{ .Values.worker.terminationGracePeriodSeconds }}
      containers:
        {{- include "netbox.git.containers.sync" (dict "securityContext" .Values.git.securityContext "context" $) | trim | nindent 8 }}
        - name: worker
          image: {{ template "netbox.worker.image" . }}
          imagePullPolicy: {{ .Values.worker.image.pullPolicy | quote }}
          {{- if .Values.worker.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.worker.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.diagnosticMode.enabled }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.command "context" $) | nindent 12 }}
          {{- else if .Values.worker.command }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.worker.command "context" $) | nindent 12 }}
          {{- else }}
          command:
            - /opt/netbox/venv/bin/python
            - /opt/netbox/netbox/manage.py
            - rqworker
          {{- end }}
          {{- if .Values.diagnosticMode.enabled }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.args "context" $) | nindent 12 }}
          {{- else if .Values.worker.args }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.worker.args "context" $) | nindent 12 }}
          {{- end }}
          {{- if or .Values.worker.extraPorts (and .Values.metrics.enabled .Values.worker.metrics.enabled) }}
          ports:
            {{- if and .Values.metrics.enabled .Values.worker.metrics.enabled }}
            - name: http
              containerPort: {{ default 8080 .Values.worker.containerPorts.http }}
              protocol: TCP
            {{- end }}
            {{- if .Values.worker.extraPorts }}
              {{- include "common.tplvalues.render" (dict "value" .Values.worker.extraPorts "context" $) | nindent 12 }}
            {{- end }}
          {{- end }}
          {{- if .Values.worker.extraEnvVars }}
          env:
            {{- include "common.tplvalues.render" (dict "value" .Values.worker.extraEnvVars "context" $) | nindent 12 }}
          {{- end }}
          {{- if or .Values.extraEnvVarsCM .Values.extraEnvVarsSecret }}
          envFrom:
            {{- if .Values.extraEnvVarsCM }}
            - configMapRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.extraEnvVarsCM "context" $) }}
            {{- end }}
            {{- if .Values.extraEnvVarsSecret }}
            - secretRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.extraEnvVarsSecret "context" $) }}
            {{- end }}
          {{- end }}

          {{- if .Values.worker.resources }}
          resources: {{- toYaml .Values.worker.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: config
              mountPath: /etc/netbox/config/configuration.py
              subPath: configuration.py
              readOnly: true
            {{- if .Values.remoteAuth.ldap.enabled }}
            - name: config
              mountPath: /etc/netbox/config/ldap/ldap_config.py
              subPath: ldap_config.py
              readOnly: true
            {{- end }}
            - name: config
              mountPath: /run/config/netbox
              readOnly: true
            - name: secrets
              mountPath: /run/secrets/netbox
              readOnly: true
            - name: netbox-tmp
              mountPath: /tmp
            - name: media
              mountPath: {{ .Values.persistence.path | quote }}
              {{- if .Values.persistence.subPath }}
              subPath: {{ .Values.persistence.subPath | quote }}
              {{- end }}
            - name: reports
              mountPath: {{ .Values.reportsPersistence.path  }}
              {{- if .Values.reportsPersistence.subPath }}
              subPath: {{ .Values.reportsPersistence.subPath | quote }}
              {{- end }}
            - name: scripts
              mountPath: {{ .Values.scriptsPersistence.path  }}
              {{- if .Values.scriptsPersistence.subPath }}
              subPath: {{ .Values.scriptsPersistence.subPath | quote }}
              {{- end }}
            {{- include "netbox.git.maincontainer.volumeMounts" . | trim | nindent 12 }}
            {{- if and .Values.metrics.enabled .Values.worker.metrics.enabled .Values.metrics.extraVolumeMounts }}
              {{- include "common.tplvalues.render" (dict "value" .Values.metrics.extraVolumeMounts "context" $) | nindent 12 }}
            {{- end }}
            {{- include "netbox.extraConfig.volumeMounts" . | nindent 12 }}
            {{- if .Values.worker.extraVolumeMounts }}
              {{- include "common.tplvalues.render" ( dict "value" .Values.worker.extraVolumeMounts "context" $ ) | nindent 12 }}
            {{- end }}
        {{- if .Values.worker.sidecars }}
          {{- include "common.tplvalues.render" (dict "value" .Values.worker.sidecars "context" $) | nindent 8 }}
        {{- end }}
      {{- $needsVolumePermissions := and .Values.volumePermissions.enabled .Values.persistence.enabled .Values.worker.podSecurityContext.enabled .Values.worker.containerSecurityContext.enabled }}
      {{- if or .Values.redisWait.enabled .Values.git.reports.enabled .Values.git.scripts.enabled .Values.worker.initContainers $needsVolumePermissions }}
      initContainers:
        {{- include "netbox.redisWait.container" (dict "securityContext" .Values.redisWait.containerSecurityContext "context" $) | trim | nindent 8 }}
        {{- include "netbox.git.containers.clone" (dict "securityContext" .Values.git.securityContext "context" $) | trim | nindent 8 }}
        {{- if .Values.worker.initContainers }}
          {{- include "common.tplvalues.render" (dict "value" .Values.worker.initContainers "context" $) | nindent 8 }}
        {{- end }}
      {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ include "netbox.configmapName" . }}
        - name: secrets
          projected:
            sources:
              - secret:
                  name: {{ include "netbox.secretName" . | quote }}
                  items:
                    # Used by our configuration
                    - key: {{ include "netbox.email.secretPasswordKey" . }}
                      path: email_password
                    - key: {{ include "netbox.secretSecretKeyKey" . }}
                      path: secret_key
              {{- if and .Values.remoteAuth.enabled (has "netbox.authentication.LDAPBackend" .Values.remoteAuth.backends) .Values.remoteAuth.ldap.enabled }}
              - secret:
                  name: {{ include "netbox.remoteAuth.secretName" . | quote }}
                  items:
                    {{- if and (has "netbox.authentication.LDAPBackend" .Values.remoteAuth.backends) .Values.remoteAuth.ldap.enabled }}
                    - key: {{ include "netbox.remoteAuth.ldap.secretBindPasswordKey" . | quote }}
                      path: ldap_bind_password
                    {{- end }}
              {{- end }}
              - secret:
                  name: {{ include "netbox.databaseSecretName" . | quote }}
                  items:
                    - key: {{ include "netbox.databaseSecretPasswordKey" . | quote }}
                      path: db_password
              - secret:
                  name: {{ include "netbox.redis.secretName" . | quote }}
                  items:
                    - key: {{ include "netbox.cachingRedis.secretPasswordKey" . | quote }}
                      path: redis_cache_password
                    - key: {{ include "netbox.tasksRedis.secretPasswordKey" . | quote }}
                      path: redis_tasks_password
        - name: netbox-tmp
          emptyDir:
            medium: Memory
        {{- include "netbox.media.volumes" . | trim | nindent 8 }}
        {{- include "netbox.reports.volumes" . | trim | nindent 8 }}
        {{- include "netbox.scripts.volumes" . | trim | nindent 8 }}
        {{- include "netbox.git.volumes" . | trim | nindent 8 }}
        {{- include "netbox.extraConfig.volumes" . | nindent 8 }}
        {{- if and .Values.metrics.enabled .Values.worker.metrics.enabled .Values.metrics.extraVolumes }}
          {{- include "common.tplvalues.render" (dict "value" .Values.metrics.extraVolumes "context" $) | nindent 8 }}
        {{- end }}
        {{- if .Values.extraVolumes }}
          {{- include "common.tplvalues.render" (dict "value" .Values.extraVolumes "context" $) | nindent 8 }}
        {{- end }}
{{- end }}