{{- if (not .Values.auth.existingSecret) }}
{{- $secretName := include "common.secrets.name" (dict "existingSecret" .Values.auth.existingSecret "context" $)}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "common.names.fullname" . }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: network-application
    {{- if .Values.commonLabels }}
      {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
type: Opaque
data:
  unifi-password: {{ include "common.secrets.passwords.manage" (dict "secret" $secretName "key" "unifi-password" "providedValues" (list "auth.unifiPassword") "context" $) }}
  {{- if and (not .Values.mongodb.enabled) (not .Values.externalDatabase.existingSecret) }}
  mongodb-password: {{ include "common.secrets.passwords.manage" (dict "secret" $secretName "key" "mongodb-password" "providedValues" (list ".Values.externalDatabase.password") "context" $) }}
  {{- end }}
  {{- if and .Values.influxdb.enabled .Values.influxdb.setDefaultUser.enabled .Values.influxdb.setDefaultUser.user.password }}
  influxdb-password: {{ .Values.influxdb.setDefaultUser.user.password | b64enc | quote }}
  {{- end }}
  {{- if .Values.auth.tls.enabled }}
  {{- if or .Values.auth.tls.keystorePassword .Values.auth.tls.autoGenerated .Values.auth.tls.usePem }}
  tls-keystore-password: {{ include "common.secrets.passwords.manage" (dict "secret" $secretName "key" "tls-keystore-password" "length" 10 "providedValues" (list "auth.tls.keystorePassword") "context" $) }}
  {{- end }}
  {{- if or .Values.auth.tls.truststorePassword .Values.auth.tls.autoGenerated .Values.auth.tls.usePem }}
  tls-truststore-password: {{ include "common.secrets.passwords.manage" (dict "secret" $secretName "key" "tls-truststore-password" "length" 10 "providedValues" (list "auth.tls.truststorePassword") "context" $) }}
  {{- end }}
  {{- end }}
{{- end }}