## @section Global parameters

## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass

## @param global.imageRegistry Global Docker image registry
## @param global.imagePullSecrets Global Docker registry secret names as an array
## @param global.storageClass Global StorageClass for Persistent Volume(s)
##
global:
  imageRegistry: ""
  ## E.g.
  ## imagePullSecrets:
  ##   - myRegistryKeySecretName
  ##
  imagePullSecrets: []
  storageClass: ""

## @section Common parameters

## @param kubeVersion Force target Kubernetes version (using Helm capabilities if not set)
##
kubeVersion: ""
## @param nameOverride String to partially override Multus CNI.fullname
##
nameOverride: ""
## @param fullnameOverride String to fully override Multus CNI.fullname
##
fullnameOverride: ""
## @param hostAliases Add deployment host aliases
## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
##
hostAliases: []
## @param hostNetwork Specify if host network should be enabled for Multus CNI pod
##
hostNetwork: true
## @param hostIPC Specify if host IPC should be enabled for Multus CNI pod
##
hostIPC: false
## @param hostPID Specify if host PID should be enabled for Multus CNI pod
##
hostPID: true
## @param commonLabels Labels to add to all deployed objects
##
commonLabels: {}
## @param commonAnnotations Annotations to add to all deployed objects
##
commonAnnotations: {}
## @param clusterDomain Default Kubernetes cluster domain
##
clusterDomain: cluster.local
## @param extraDeploy Array of extra objects to deploy with the release
##
extraDeploy: []

## Enable diagnostic mode in the deployment
##
diagnosticMode:
  ## @param diagnosticMode.enabled Enable diagnostic mode (all probes will be disabled and the command will be overridden)
  ##
  enabled: false
  ## @param diagnosticMode.command Command to override all containers in the deployment
  ##
  command:
    - sleep
  ## @param diagnosticMode.args Args to override all containers in the deployment
  ##
  args:
    - infinity

## @section Multus common parameters

## Multus image
## @param image.registry Multus image registry
## @param image.repository Multus image repository
## @param image.tag Multus image tag (immutable tags are recommended)
## @param image.pullPolicy Multus image pull policy
## @param image.pullSecrets Specify docker-registry secret names as an array
## @param image.debug Specify if debug logs should be enabled
##
image:
  registry: ghcr.io
  repository: k8snetworkplumbingwg/multus-cni
  tag: "latest-thick"
  ## Specify a imagePullPolicy
  ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
  ## ref: https://kubernetes.io/docs/user-guide/images/#pre-pulling-images
  ##
  pullPolicy: IfNotPresent
  ## Optionally specify an array of imagePullSecrets (secrets must be manually created in the namespace)
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ## Example:
  ## pullSecrets:
  ##   - myRegistryKeySecretName
  ##
  pullSecrets: []
  ## Set to true if you would like to see extra information on logs
  ## It turns BASH and/or NAMI debugging in the image
  ##
  debug: false


## @param CNIVersion CNI version
##
CNIVersion: "0.3.1"
## @param hostCNIBinDir CNI binary dir in the host machine to mount
## ref: https://github.com/bitnami/containers/tree/main/bitnami/multus-cni#configuration
##
hostCNIBinDir: /opt/cni/bin
## @param hostCNINetDir CNI net.d dir in the host machine to mount
## ref: https://github.com/bitnami/containers/tree/main/bitnami/multus-cni#configuration
##
hostCNINetDir: /etc/cni/net.d
## @param CNIMountPath Path inside the container to mount the CNI dirs
## ref: https://github.com/bitnami/containers/tree/main/bitnami/multus-cni#configuration
##
CNIMountPath: /host

## @param command Override default container command (useful when using custom images)
##
command: []
## @param args Override default container args (useful when using custom images)
##
args: []
## @param extraEnvVars Array containing extra env vars to configure Multus  replicas
## For example:
## extraEnvVars:
##  - name: TZ
##    value: "Asia/Jakarta"
##
extraEnvVars: []
## @param extraEnvVarsCM ConfigMap containing extra env vars to configure Multus  replicas
##
extraEnvVarsCM: ""
## @param extraEnvVarsSecret Secret containing extra env vars to configure Multus  replicas
##
extraEnvVarsSecret: ""

## @section RBAC parameter
#

## Specifies whether a ServiceAccount should be created
##
serviceAccount:
  ## @param serviceAccount.create Enable the creation of a ServiceAccount for Multus CNI pods
  ##
  create: true
  ## @param serviceAccount.name Name of the created ServiceAccount
  ## If not set and create is true, a name is generated using the fullname template
  ##
  name: ""
  ## @param serviceAccount.automountServiceAccountToken Auto-mount the service account token in the pod
  ##
  automountServiceAccountToken: true
  ## @param serviceAccount.annotations Additional custom annotations for the ServiceAccount
  ##
  annotations: {}
## Role Based Access
## Ref: https://kubernetes.io/docs/admin/authorization/rbac/
##
rbac:
  ## @param rbac.create Specify whether RBAC resources should be created and used
  ##
  create: false
  ## @param rbac.rules Custom RBAC rules
  ## Example:
  ## rules:
  ##   - apiGroups:
  ##       - ""
  ##     resources:
  ##       - pods
  ##     verbs:
  ##       - get
  ##       - list
  ##
  rules: []

## @param containerPorts.http Istio Gateway HTTP container port
##
containerPorts:
  metrics: 17020
## Pod Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
## @param podSecurityContext.enabled Enable security context
## @param podSecurityContext.fsGroup Group ID for the container filesystem
## @param podSecurityContext.runAsUser User ID for the container
##
podSecurityContext:
  enabled: false
  fsGroup: 1001
  runAsUser: 1001
## Configure Container Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
## @param containerSecurityContext.enabled Enabled galera's container Security Context
## @param containerSecurityContext.runAsUser Set galera's container Security Context runAsUser
## @param containerSecurityContext.runAsNonRoot Set galera's container Security Context runAsNonRoot
containerSecurityContext:
  enabled: true
  # runAsUser: 1001
  # runAsNonRoot: true
  privileged: true

## @param cniConfig
## NOTE: If you'd prefer to manually apply a configuration file, you may create one here.
## In the case you'd like to customize the Multus installation, you should change the arguments to the Multus pod
## change the "args" line below from
## - "--multus-conf-file=auto"
## to:
## "--multus-conf-file=/tmp/multus-conf/70-multus.conf"
## Additionally -- you should ensure that the name "70-multus.conf" is the alphabetically first name in the
## /etc/cni/net.d/ directory on each node, otherwise, it will not be used by the Kubelet.
##
cniConfig: |-
  {
    "name": "multus-cni-network",
    "type": "multus",
    "capabilities": {
      "portMappings": true
    },
    "delegates": [
      {
        "cniVersion": "0.3.1",
        "name": "default-cni-network",
        "plugins": [
          {
            "type": "flannel",
            "name": "flannel.1",
              "delegate": {
                "isDefaultGateway": true,
                "hairpinMode": true
              }
            },
            {
              "type": "portmap",
              "capabilities": {
                "portMappings": true
              }
            }
        ]
      }
    ],
    "kubeconfig": "/etc/cni/net.d/multus.d/multus.kubeconfig"
  }

daemonConfig: |-
  {
    "chrootDir": "/hostroot",
    "cniVersion": "0.3.1",
    "logLevel": "debug",
    "logToStderr": true,
    "metricsPort": 17020,
    "multusAutoconfigDir": "/host/etc/cni/net.d",
    "multusConfigFile": "auto",
    "socketDir": "/host/run/multus/"
  }

## @param configurationConfigMap ConfigMap with the Multus cni configuration files. The value is evaluated as a template.
##
cniConfigMap: ""
## @param daemonConfigMap ConfigMap with the Multus daemon configuration files. The value is evaluated as a template.
##
daemonConfigMap: ""
## @param extraFlags Multus additional command line flags
## Can be used to specify command line flags, for example:
## e.g:
## extraFlags: "--max-connect-errors=1000 --max_connections=155"
##
extraFlags: ""
## @param updateStrategy.type updateStrategy for Multus Master StatefulSet
## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
##
updateStrategy:
  type: RollingUpdate
## @param podLabels Extra labels for Multus pods
## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
##
podLabels: {}
## @param podAnnotations Annotations for Multus pods
## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
##
podAnnotations: {}
## @param podAffinityPreset Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
##
podAffinityPreset: ""
## @param podAntiAffinityPreset Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
##
podAntiAffinityPreset: ""
## Node affinity preset
## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
##
nodeAffinityPreset:
  ## @param nodeAffinityPreset.type Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
  ##
  type: ""
  ## @param nodeAffinityPreset.key Node label key to match. Ignored if `affinity` is set.
  ## E.g.
  ## key: "kubernetes.io/e2e-az-name"
  ##
  key: ""
  ## @param nodeAffinityPreset.values Node label values to match. Ignored if `affinity` is set.
  ## E.g.
  ## values:
  ##   - e2e-az1
  ##   - e2e-az2
  ##
  values: []
## @param affinity Affinity for pod assignment
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
## Note: podAffinityPreset, podAntiAffinityPreset, and nodeAffinityPreset will be ignored when it's set
##
affinity: {}
## @param nodeSelector Node labels for pod assignment
## ref: https://kubernetes.io/docs/user-guide/node-selection/
##
## nodeSelector: {}
nodeSelector:
  kubernetes.io/arch: amd64
  kubernetes.io/os: linux
## @param tolerations Tolerations for pod assignment
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
## tolerations: []
tolerations:
  - operator: Exists
    effect: NoExecute
  - operator: Exists
    effect: NoSchedule
## @param topologySpreadConstraints Topology Spread Constraints for pods assignment
## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
## E.g.
## topologySpreadConstraints:
##   - maxSkew: 1
##     topologyKey: topology.kubernetes.io/zone
##     whenUnsatisfiable: DoNotSchedule
##
topologySpreadConstraints: {}
## @param lifecycleHooks for the galera container(s) to automate configuration before or after startup
##
lifecycleHooks: {}

## @param priorityClassName Priority Class Name for Daemonset
##
priorityClassName: system-node-critical
## @param initContainers Additional init containers (this value is evaluated as a template)
## extraInitContainers:
## - name: do-something
##   image: bitnami/minideb
##   command: ['do', 'something']
##
initContainers: []
## @param extraContainers Additional containers (this value is evaluated as a template)
##
extraContainers: []
## extraVolumes and extraVolumeMounts allows you to mount other volumes
## @param extraVolumes Extra volumes
## @param extraVolumeMounts Mount extra volume(s)
## Example Use Cases:
##  mount certificates to enable data-in-transit encryption
##  mount keys for data-at-rest encryption using file plugin
## e.g:
## extraVolumes:
## - name: mariadb-certs
##   secret:
##     defaultMode: 288
##     secretName: mariadb-certs
## - name: mariadb-encryption
##   secret:
##     defaultMode: 288
##     secretName: mariadb-encryption
##
extraVolumes: []
## extraVolumeMounts:
## - name: mariadb-certs
##   mountPath: /certs
##   readOnly: true
## - name: mariadb-encryption
##   mountPath: /encryption
##   readOnly: true
##
extraVolumeMounts: []

## Multus CNI containers' resource requests and limits
## We usually recommend not to specify default resources and to leave this as a conscious
## choice for the user. This also increases chances charts run on environments with little
## resources, such as Minikube. If you do want to specify resources, uncomment the following
## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
## @param resources.limits The resources limits for the container
## @param resources.requests The requested resources for the container
##
resources:
  ## Example:
  ## limits:
  ##    cpu: 0.5
  ##    memory: 256Mi
  limits:
    cpu: "100m"
    memory: "50Mi"
  ## Examples:
  ## requests:
  ##    cpu: 0.5
  ##    memory: 256Mi
  requests:
    cpu: "100m"
    memory: "50Mi"
## Multus CNI containers' liveness probe
## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
## @param livenessProbe.enabled Turn on and off liveness probe
## @param livenessProbe.initialDelaySeconds Delay before liveness probe is initiated
## @param livenessProbe.periodSeconds How often to perform the probe
## @param livenessProbe.timeoutSeconds When the probe times out
## @param livenessProbe.failureThreshold Minimum consecutive failures for the probe
## @param livenessProbe.successThreshold Minimum consecutive successes for the probe
##
livenessProbe:
  enabled: true
  ## Initializing the database could take some time
  ##
  initialDelaySeconds: 120
  periodSeconds: 10
  timeoutSeconds: 1
  successThreshold: 1
  failureThreshold: 3
## Multus CNI containers' readiness probe
## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
## @param readinessProbe.enabled Turn on and off readiness probe
## @param readinessProbe.initialDelaySeconds Delay before readiness probe is initiated
## @param readinessProbe.periodSeconds How often to perform the probe
## @param readinessProbe.timeoutSeconds When the probe times out
## @param readinessProbe.failureThreshold Minimum consecutive failures for the probe
## @param readinessProbe.successThreshold Minimum consecutive successes for the probe
##
readinessProbe:
  enabled: true
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 1
  successThreshold: 1
  failureThreshold: 3
## Multus CNI containers' startup probe
## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
## @param startupProbe.enabled Turn on and off startup probe
## @param startupProbe.initialDelaySeconds Delay before startup probe is initiated
## @param startupProbe.periodSeconds How often to perform the probe
## @param startupProbe.timeoutSeconds When the probe times out
## @param startupProbe.failureThreshold Minimum consecutive failures for the probe
## @param startupProbe.successThreshold Minimum consecutive successes for the probe
##
startupProbe:
  enabled: false
  ## Initializing the database could take some time
  ##
  initialDelaySeconds: 120
  periodSeconds: 10
  timeoutSeconds: 1
  successThreshold: 1
  ## Let's wait 600 seconds by default, it should give enough time in any cluster for mysql to init
  ##
  failureThreshold: 48
## @param customStartupProbe Custom liveness probe for the Web component
##
customStartupProbe: {}
## @param customLivenessProbe Custom liveness probe for the Web component
##
customLivenessProbe: {}
## @param customReadinessProbe Custom rediness probe for the Web component
##
customReadinessProbe: {}
## Pod disruption budget configuration
##
podDisruptionBudget:
  ## @param podDisruptionBudget.create Specifies whether a Pod disruption budget should be created
  ##
  create: false
  ## @param podDisruptionBudget.minAvailable Minimum number / percentage of pods that should remain scheduled
  ##
  minAvailable: 1
  ## @param podDisruptionBudget.maxUnavailable Maximum number / percentage of pods that may be made unavailable
  ##
  maxUnavailable: ""

## @section Traffic Exposure Parameters

## Multus CNI service parameters
##
service:
  ## @param service.type Multus CNI Kubernetes service type
  ##
  type: ClusterIP
  ## @param service.ports.metric Multus CNI Kubernetes service port
  ##
  ports:
    metrics: 17020
  ## @param service.nodePorts.http Multus CNI Kubernetes service node port
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
  ##
  nodePorts:
    metric: ""
  ## @param service.clusterIP Multus CNI Kubernetes service clusterIP IP
  ##
  clusterIP: ""
  ## @param service.loadBalancerIP Multus CNI loadBalancerIP if service type is `LoadBalancer`
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
  ##
  loadBalancerIP: ""
  ## @param service.ipFamilyPolicy Multus CNI Kubernetes service ipFamilyPolicy policy
  ##
  ipFamilyPolicy: SingleStack
  ## @param service.externalTrafficPolicy Enable client source IP preservation
  ## ref https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
  ##
  externalTrafficPolicy: Cluster
  ## @param service.loadBalancerClass Enables to use a load balancer implementation other than the cloud provider default.
  ## https://kubernetes.io/docs/concepts/services-networking/service/#load-balancer-class
  ##
  loadBalancerClass: ""
  ## @param service.loadBalancerSourceRanges Address that are allowed when Multus CNI service is LoadBalancer
  ## https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
  ## E.g.
  ## loadBalancerSourceRanges:
  ##   - 10.10.10.0/24
  ##
  loadBalancerSourceRanges: []
  ## @param service.extraPorts Extra ports to expose (normally used with the `sidecar` value)
  ##
  extraPorts: []
  ## @param service.annotations Provide any additional annotations which may be required
  ##
  annotations: {}
  ## @param service.sessionAffinity Session Affinity for Kubernetes service, can be "None" or "ClientIP"
  ## If "ClientIP", consecutive client requests will be directed to the same Pod
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
  ##
  sessionAffinity: None
  ## @param service.sessionAffinityConfig Additional settings for the sessionAffinity
  ## sessionAffinityConfig:
  ##   clientIP:
  ##     timeoutSeconds: 300
  sessionAffinityConfig: {}

## Prometheus exporter configuration
##
metrics:
  ## @param metrics.enabled Start a side-car prometheus exporter
  ##
  enabled: true
  ## @param metrics.annotations [object] Annotations for the Exporter pod
  ##
  annotations:
    prometheus.io/port: "17020"
    prometheus.io/scrape: "true"
    prometheus.io/path: "/metrics"
  ## Multus CNI Prometheus exporter image
  ## ref: https://hub.docker.com/r/bitnami/mysqld-exporter/tags/
  ## @param metrics.image.registry Multus Prometheus exporter image registry
  ## @param metrics.image.repository Multus Prometheus exporter image repository
  ## @param metrics.image.tag Multus Prometheus exporter image tag (immutable tags are recommended)
  ## @param metrics.image.pullPolicy Multus Prometheus exporter image pull policy
  ## @param metrics.image.pullSecrets Multus Prometheus exporter image pull secrets
  ##
  image:
    registry: docker.io
    repository: ""
    tag: ""
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets (secrets must be manually created in the namespace)
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## Example:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []

  ## Prometheus Service Monitor
  ## ref: https://github.com/coreos/prometheus-operator
  ##
  serviceMonitor:
    ## @param metrics.serviceMonitor.enabled Create ServiceMonitor Resource for scraping metrics using PrometheusOperator
    ##
    enabled: false
    ## @param metrics.serviceMonitor.namespace Namespace which Prometheus is running in
    ##
    namespace: ""
    ## @param metrics.serviceMonitor.jobLabel The name of the label on the target service to use as the job name in prometheus.
    ##
    jobLabel: ""
    ## @param metrics.serviceMonitor.interval Interval at which metrics should be scraped
    ##
    interval: 30s
    ## @param metrics.serviceMonitor.scrapeTimeout Specify the timeout after which the scrape is ended
    ## e.g:
    ## scrapeTimeout: 30s
    ##
    scrapeTimeout: ""
    ## @param metrics.serviceMonitor.relabelings RelabelConfigs to apply to samples before scraping
    ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#relabelconfig
    ##
    relabelings: []
    ## @param metrics.serviceMonitor.metricRelabelings MetricRelabelConfigs to apply to samples before ingestion
    ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#relabelconfig
    ##
    metricRelabelings: []
    ## @param metrics.serviceMonitor.honorLabels honorLabels chooses the metric's labels on collisions with target labels
    ##
    honorLabels: false
    ## @param metrics.serviceMonitor.selector ServiceMonitor selector labels
    ## ref: https://github.com/bitnami/charts/tree/main/bitnami/prometheus-operator#prometheus-configuration
    ##
    ## selector:
    ##   prometheus: my-prometheus
    ##
    selector: {}
    ## @param metrics.serviceMonitor.labels Extra labels for the ServiceMonitor
    ##
    labels: {}

  ## Prometheus Operator PrometheusRule configuration
  ##
  prometheusRules:
    ## @param metrics.prometheusRules.enabled if `true`, creates a Prometheus Operator PrometheusRule (also requires `metrics.enabled` to be `true`, and makes little sense without ServiceMonitor)
    ##
    enabled: false
    ## @param metrics.prometheusRules.additionalLabels [object] Additional labels to add to the PrometheusRule so it is picked up by the operator
    ## If using the [Helm Chart](https://github.com/helm/charts/tree/master/stable/prometheus-operator) this is the name of the Helm release and 'app: prometheus-operator'
    ##
    additionalLabels:
      app: prometheus-operator
      release: prometheus
    ## @param metrics.prometheusRules.rules PrometheusRule rules to configure
    ## e.g:
    ##  - alert: Multus-Down
    ##    annotations:
    ##      message: 'Multus instance {{ $labels.instance }} is down'
    ##      summary: Multus instance is down
    ##    expr: absent(up{job="multus-cni"} == 1)
    ##    labels:
    ##      severity: warning
    ##      service: multus-cni
    ##    for: 5m
    ##
    rules: {}