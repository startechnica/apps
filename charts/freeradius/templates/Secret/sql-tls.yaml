{{- /*
Copyright (c) 2025 Firmansyah Nainggolan. All Rights Reserved.
SPDX-License-Identifier: APACHE-2.0
*/}}

{{- if and (include "freeradius.createSqlTlsSecret" .) (not .Values.tls.autoGenerator.certmanager.enabled) }}
{{- $ca := genCA "freeradius-ca" 365 }}
{{- $releaseNamespace := include "st-common.names.namespace" . }}
{{- $clusterDomain := .Values.clusterDomain }}
{{- $fullname := include "st-common.names.fullname" . }}
{{- $altNames := list (printf "*.%s.%s.svc.%s" $fullname $releaseNamespace $clusterDomain) (printf "%s.%s.svc" $fullname $releaseNamespace) (printf "%s.%s" $fullname $releaseNamespace) $fullname }}
{{- $crt := genSignedCert $fullname nil $altNames 365 $ca }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "st-common.names.fullname" . }}-sql-tls
  namespace: {{ include "st-common.names.namespace" . | quote }}
  {{- if .Values.commonAnnotations }}
  annotations:
    {{- include "st-common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
  labels:
    {{- include "st-common.labels.standard" . | nindent 4 }}
    {{- if .Values.commonLabels }}
      {{- include "st-common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
type: kubernetes.io/tls
data:
  ca.crt: {{ $ca.Cert | b64enc | quote }}
  tls.crt: {{ $crt.Cert | b64enc | quote }}
  tls.key: {{ $crt.Key | b64enc | quote }}
{{- end }}